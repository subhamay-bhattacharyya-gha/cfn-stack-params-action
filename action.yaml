name: 'CloudFormation Configuration Processor'
description: 'Process CloudFormation deployment configurations and generate parameters, stack names, and CI build identifiers'
author: 'GitHub'
branding:
  icon: 'cloud'
  color: 'orange'

inputs:
  cfn-directory:
    description: 'Folder containing CloudFormation configuration files'
    required: false
    default: 'cfn'
  ci-build:
    description: 'Whether this is a CI build (true/false)'
    required: false
    default: 'false'
  environment:
    description: 'Target environment name'
    required: false
    default: ''
  retention-days:
    description: 'Number of days to retain the deployment artifact'
    required: false
    default: '7'

outputs:
  parameters:
    description: 'JSON array of CloudFormation parameters'
    value: ${{ steps.process-config.outputs.parameters }}
  stack-name:
    description: 'Generated CloudFormation stack name'
    value: ${{ steps.process-config.outputs.stack-name }}
  template:
    description: 'CloudFormation template filename from configuration'
    value: ${{ steps.process-config.outputs.template }}
  tags:
    description: 'JSON array of CloudFormation tags'
    value: ${{ steps.process-config.outputs.tags }}

runs:
  using: 'composite'
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      shell: bash
      run: npm install --omit=dev --no-audit --no-fund
      working-directory: ${{ github.action_path }}

    - name: Run CloudFormation Configuration Processor
      id: process-config
      shell: bash
      run: node ${{ github.action_path }}/src/main.js
      env:
        INPUT_CFN_DIRECTORY: ${{ inputs.cfn-directory }}
        INPUT_CI_BUILD: ${{ inputs.ci-build }}
        INPUT_ENVIRONMENT: ${{ inputs.environment }}

    - name: Print Action Outputs
      shell: bash
      run: |
        echo "=== CloudFormation Configuration Processor Outputs ==="
        echo "Template: ${{ steps.process-config.outputs.template }}"
        echo "Stack Name: ${{ steps.process-config.outputs.stack-name }}"
        echo "Parameters: ${{ steps.process-config.outputs.parameters }}"
        echo "Tags: ${{ steps.process-config.outputs.tags }}"
        echo "========================================================="

    - name: Create Deployment JSON File
      id: create-deployment-json
      shell: bash
      run: |
        echo "Creating deployment JSON file..."
        # Create directory for artifacts
        mkdir -p artifacts
        # Create JSON file with parameters, stack-name, template path, and tags
        cat > artifacts/deployment.json << EOF
        {
          "parameters": ${{ steps.process-config.outputs.parameters }},
          "stack-name": "${{ steps.process-config.outputs.stack-name }}",
          "template-path": "${{ inputs.cfn-directory }}/${{ steps.process-config.outputs.template }}",
          "tags": ${{ steps.process-config.outputs.tags }}
        }
        EOF
        echo "‚úÖ Created deployment.json:"
        cat artifacts/deployment.json

    - name: Display Prepared Parameters
      shell: bash
      run: |
        echo "## üìã CloudFormation Configuration" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Configuration Directory:** \`${{ inputs.cfn-directory }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Template:** \`${{ steps.process-config.outputs.template }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Stack Name:** \`${{ steps.process-config.outputs.stack-name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -n "${{ steps.process-config.outputs.parameters }}" ]; then
          echo "### Prepared Parameters:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.process-config.outputs.parameters }}' | jq . >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ CloudFormation parameters prepared successfully"
          echo "Prepared parameters:"
          echo "${{ steps.process-config.outputs.parameters }}"
        else
          echo "### ‚ö†Ô∏è No Parameters Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No parameters were found or prepared from the configuration." >> $GITHUB_STEP_SUMMARY
          echo "‚ö†Ô∏è No parameters found in the configuration"
        fi
        
        if [ -n "${{ steps.process-config.outputs.tags }}" ]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Prepared Tags:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.process-config.outputs.tags }}' | jq . >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "‚úÖ CloudFormation tags prepared successfully"
          echo "Prepared tags:"
          echo "${{ steps.process-config.outputs.tags }}"
        else
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ‚ÑπÔ∏è No Tags Found" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "No tags were found or prepared from the configuration." >> $GITHUB_STEP_SUMMARY
          echo "‚ÑπÔ∏è No tags found in the configuration"
        fi

    - name: Upload Deployment JSON as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-parameters
        path: artifacts/deployment.json
        retention-days: ${{ inputs.retention-days }}